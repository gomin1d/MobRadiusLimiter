<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ua.lokha</groupId>
    <artifactId>MobRadiusLimiter</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
        <!--
        Путь к папке, куда помещать скомпилированный плагин после сборки.
        По умолчанию эта переменная равна стандартному пути папки для сборки ${project.build.directory} (папка target).
        Эта переменная используется для переопределения этого пути.

        Например, такая команда скомпилирует плагин и поместит его в папку TestServers/hub/plugins в корне проекта:
        mvn clean package -DpluginsDirectory=${session.executionRootDirectory}/TestServers/hub/plugins
        -->
        <pluginsDirectory>${project.build.directory}</pluginsDirectory>
    </properties>

    <repositories>
        <repository>
            <id>lokha-maven-repo</id>
            <url>https://raw.githubusercontent.com/lokha/maven-repo/repository/</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Ядро, Paper Spigot -->
        <dependency>
            <groupId>net.mineland</groupId>
            <artifactId>Paper</artifactId>
            <version>1568</version>
            <scope>provided</scope>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!-- Дефолтные плагины сборки -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- Компляция -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>

                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Тесты -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>

            <!-- Запаковывание зависимостей в один jar файл -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Закидывание jar файла в папку тестового сервера -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <finalName>MobRadiusLimiter</finalName>
                    <outputDirectory>${pluginsDirectory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>